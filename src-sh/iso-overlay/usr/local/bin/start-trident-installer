#!/bin/bash
INSTALLER="/bin/trident-installer"
TITLE="Project Trident Installer"
LOGFILE="/tmp/install.log"

echo "Launching Installer..."

get_dlg_ans(){
  # INPUTS:
  #   TITLE: Title to use for the dialog
  #   CLI Args : Arguments for dialog (option_name, option_text, repeat...)
  # OUTPUTS:
  #   ANS: option_name selected by user

  local TANS="/tmp/.dlg.ans.$$"
  if [ -e "$TANS" ] ; then rm ${TANS}; fi
  if [ -e "$TANS.dlg" ] ; then rm ${TANS}.dlg; fi
  while :
  do
    echo "dialog --title \"$TITLE\" ${@}" >${TANS}.dlg
    sh ${TANS}.dlg 2>${TANS}
    local _ret=$?
    if [ $_ret -ne 0 ] || [ ! -e "$TANS" ] ; then
      #echo "Cancel detected : ${CURMENU} ${_ret}"
      #sleep 1
      rm ${TANS} 2>/dev/null
    fi

    if [ ! -e "$TANS" ] ; then
       ANS=""
    else
      ANS=`cat ${TANS}`
      rm ${TANS}
    fi
    #echo "Got Ans: ${ANS}"
    #sleep 2
    rm ${TANS}.dlg
    return ${_ret}
  done
}

PingTest(){
  #echo "Checking for network connection..."
  ping -q -c 1 -W 2 github.com > /dev/null 2> /dev/null
  return $?
}

ViewLog(){
  get_dlg_ans "--textbox ${LOGFILE} 0 0"
  ANS="dummy"
}

InstallSuccessful(){
  if [ ! -e "${LOGFILE}" ] ; then return 1 ; fi
  grep -q "[SUCCESS] Reboot the system" "${LOGFILE}"
  return $?
}

StartInstall(){
  PingTest
  if [ $? -ne 0 ] ; then
    get_dlg_ans "--msgbox \"Networking not available. Please configure it first!\" 0 0"
    ANS="dummy"
    return 0
  fi
  # Now download the latest install script
  if [ ! -e "${INSTALLER}" ] || [ "${1}" = "-f" ] ; then
    if [ -e "${INSTALLER}" ] ; then rm "${INSTALLER}" ; fi
    wget https://raw.githubusercontent.com/project-trident/trident-installer/master/src-sh/void-install-zfs.sh -O "${INSTALLER}"
    chmod 755 "${INSTALLER}"
  fi

  # And run it
  ${INSTALLER} "${LOGFILE}"
  local msg="Installation Finished"
  InstallSuccessful
  if [ $? -eq 0 ] ; then
    msg="${msg} Successfully!\n\nReboot the system and remove the installation media to boot into the new system."
  else
    msg="${msg} Unsuccessfully.\n\nPlease view the installation log for details."
  fi
  get_dlg_ans "--msgbox \"${msg}\" 0 0"
  ANS="dummy" #Ensure it returns to the main menu next
}

# This is listed in docs as necessary for old versions of dhcpcd.
# Not sure how "old" that is, but leave this here for reference
#if [ ! -f "/usr/libexec/dhcpcd-hooks/10-wpa_supplicant" ] ; then
#  ln -s /usr/share/dhcpcd/hooks/10-wpa_supplicant /usr/libexec/dhcpcd-hooks/.
#fi

get_dlg_ans "--msgbox \"WARNING: This is an ALPHA image of the Void-Linux based system and only assists with setting up a ZFS-on-root installation.\n\n Packages and graphical tools are not setup yet.\" 0 0"
ANS="anything"
while [ -n "${ANS}" ] 
do
  #Show the main menu

  #Generate info header

  info=""
  opts=""
  InstallSuccessful
  if [ $? -eq 0 ] ; then
    info="Installation Successful: Ready to reboot"
  else
    status="OFFLINE"
    PingTest
    if [ $? -eq 0 ] ; then 
      status="ONLINE"
      info="Ready to begin installation"
      opts="Begin \"Start Installation Steps\""
    else
      info="Networking setup needed"
      opts="Configure \"Setup Networking\" Rescan \"Check network status\""
    fi
    info="${info}\nNetwork Status: ${status}"
  fi
  #Generate options
  if [ -e "${LOGFILE}" ] ; then
    opts="${opts} Log \"View installation log\""
  fi
  opts="${opts} Terminal \"Drop to shell\" Reboot \"\" Poweroff \"\""
  #Now prompt and do
  get_dlg_ans "--menu \"${info}\n\nSelect an option below:\" 0 0 0 ${opts}"
  case "${ANS}" in
    Begin)
	StartInstall
	;;
    Log)
	ViewLog
	;;
    Configure)
	echo "TO-DO : Add network configuration here"
	sleep 5
	;;
    Terminal)
	clear
	echo "Run `exit` or `start-trident-installer` to launch the installer again"
	echo "---------------------------------------------"
	/bin/bash
	#ANS=""
	;;
    Reboot)
	reboot
	;;
    Poweroff)
	poweroff
	;;
  esac

done
